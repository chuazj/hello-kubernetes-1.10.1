step "check-dir" {
    name = "fetch-git"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = <<-EOT
                ls -lah ./basiclinuxvm/BasicLinuxVM
                ExtractedPath=$(get_octopusvariable "Octopus.Action.Package[basiclinuxvm].ExtractedPath")
                echo "ExtractedPath:" $ExtractedPath
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "Bash"
        }
        worker_pool = "default-worker-pool"

        packages "basiclinuxvm" {
            acquisition_location = "Server"
            feed = "github-repo-feed"
            package_id = "chuazj/basiclinuxvm"
            properties = {
                Extract = "True"
                Purpose = ""
                SelectionMode = "immediate"
            }
        }
    }
}

step "run-a-script" {
    name = "start-dsl"
    properties = {
        Octopus.Action.TargetRoles = "octtentv001"
    }

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Script.ScriptBody = <<-EOT
                docker container list -a
                docker container start 4ef1bed13e6a
                docker exec -i 4ef1bed13e6a ls -lah
                docker exec -i 4ef1bed13e6a which calm
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "Bash"
        }
        worker_pool_variable = ""
    }
}

step "init-dsl" {
    name = "init-dsl"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = "docker exec -i 4ef1bed13e6a calm init dsl -i 10.38.251.39 -P 9440 -pj default -u $(get_octopusvariable \"pcusr\") -p $(get_octopusvariable \"pcpwd\")"
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "Bash"
        }
        worker_pool = "default-worker-pool"
    }
}

step "cp-to-docker" {
    name = "cp-to-docker"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = <<-EOT
                docker cp ./$(get_octopusvariable "Octopus.Action.Package[basiclinuxvm].ExtractedPath") 4ef1bed13e6a:/root
                
                echo "Docker /root path:" ls -lah /root
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "Bash"
        }
        worker_pool = "default-worker-pool"
    }
}

step "create-calm-bp" {
    name = "create-calm-bp"

    action {
        action_type = "Octopus.Script"
        is_disabled = true
        properties = {
            Octopus.Action.Script.ScriptBody = "docker exec -i 4ef1bed13e6a calm create bp --file /root/BasicLinuxVM/blueprint.py --name HelloBlueprint_v$(get_octopusvariable \"Octopus.Release.Id\")"
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "Bash"
        }
        worker_pool = "default-worker-pool"
    }
}